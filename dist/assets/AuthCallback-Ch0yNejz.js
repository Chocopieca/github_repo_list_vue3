import{a as h,i as u,H as d,b as p,e as r,o as m}from"./index-CJ9hYmeT.js";import{u as f}from"./githubAuth-BSXMpBKh.js";const _={class:"flex items-center justify-center min-h-screen"},b=h({__name:"AuthCallback",setup(g){const o=d(),c=f();return u(async()=>{const s=new URLSearchParams(window.location.search),e=s.get("code"),n=s.get("state"),i=localStorage.getItem("github_auth_state");if(localStorage.removeItem("github_auth_state"),!n||n!==i){console.error("Invalid state parameter"),o.push("/");return}if(e)try{const t=await fetch("/github-oauth/access_token",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({client_id:"Ov23liVGFpU5jgw8L93s",client_secret:"ed874d901783c2682819d3b79e92fe68d8598870",code:e})});if(!t.ok){const l=await t.text();throw new Error(`Failed to exchange code for token: ${l}`)}const a=await t.json();if(a.error)throw new Error(a.error_description||a.error);c.setToken(a.access_token),o.push("/")}catch(t){console.error("Failed to exchange code for token:",t),o.push("/")}else o.push("/")}),(s,e)=>(m(),p("div",_,e[0]||(e[0]=[r("div",{class:"text-center"},[r("h2",{class:"text-xl font-bold mb-4"},"Authenticating..."),r("p",{class:"text-gray-600"},"Please wait while we complete the authentication process.")],-1)])))}});export{b as default};
